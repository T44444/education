# Generated by Django 5.1.4 on 2024-12-27 04:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('required_skills', models.JSONField()),
                ('salary_range', models.CharField(max_length=50)),
                ('market_demand', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'career',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField()),
                ('education_level', models.CharField(max_length=50)),
                ('school', models.CharField(max_length=100)),
                ('major', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_profile',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('level', models.IntegerField(choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Very High')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='career_guidance.studentprofile')),
            ],
            options={
                'db_table': 'student_interest',
            },
        ),
        migrations.CreateModel(
            name='CareerMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_score', models.FloatField()),
                ('academic_fit', models.FloatField()),
                ('interest_fit', models.FloatField()),
                ('market_fit', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='career_guidance.career')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='career_guidance.studentprofile')),
            ],
            options={
                'db_table': 'career_match',
                'ordering': ['-match_score'],
            },
        ),
        migrations.CreateModel(
            name='AcademicRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50)),
                ('score', models.FloatField()),
                ('semester', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='career_guidance.studentprofile')),
            ],
            options={
                'db_table': 'academic_record',
                'ordering': ['-semester'],
            },
        ),
    ]
